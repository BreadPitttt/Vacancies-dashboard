name: Monday Hard Recheck

on:
  schedule:
    # 02:40 AM IST every Monday == 21:10 UTC every Sunday
    - cron: '10 21 * * 0'
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: monday-hard-recheck
  cancel-in-progress: false

jobs:
  hard-recheck:
    timeout-minutes: 240
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full history for rebase-safe updates

      - uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip certifi cloudscraper
          pip install -r requirements.txt

      - name: Run scraper (hard recheck)
        env:
          PYTHONUNBUFFERED: "1"
          TELEGRAM_RSS_BASE: ${{ vars.TELEGRAM_RSS_BASE }}
        run: python scraper.py

      - name: Validate JSON Schema
        run: python validate.py

      - name: Quality checks (links, dates, dups)
        run: python qc_checks.py

      - name: Generate health.json
        run: |
          python - << 'PY'
          import json, datetime, pathlib
          data = json.loads(pathlib.Path("data.json").read_text(encoding="utf-8"))
          ti = data.get("transparencyInfo", {})
          health = {
            "ok": True,
            "checkedAt": datetime.datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ"),
            "lastUpdated": ti.get("lastUpdated"),
            "totalListings": ti.get("totalListings"),
            "aggCounts": ti.get("aggCounts"),
            "officialCounts": ti.get("officialCounts"),
            "telegramCounts": ti.get("telegramCounts"),
            "pendingFromTelegram": ti.get("pendingFromTelegram"),
          }
          pathlib.Path("health.json").write_text(json.dumps(health, ensure_ascii=False, indent=2), encoding="utf-8")
          PY

      - name: Format data.json
        run: |
          python - << 'PY'
          import json, pathlib
          p = pathlib.Path("data.json")
          p.write_text(json.dumps(json.loads(p.read_text(encoding="utf-8")), ensure_ascii=False, indent=2), encoding="utf-8")
          PY

      - name: Commit updated data.json and health.json if changed (rebase-safe)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "actions-user"
          git config user.email "actions@users.noreply.github.com"
          if ! git diff --quiet -- data.json health.json; then
            git add data.json health.json
            git commit -m "chore(data): Monday hard recheck"
            git fetch origin main
            git pull --rebase origin main
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
